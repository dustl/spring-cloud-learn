server:
  port: 8899


#service-url:
#  user-service: http://localhost:8882
spring:
  cloud:
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能
          enabled: true
          lower-case-service-id: true
      routes:
        - id: pre_route
          uri: lb://user-service
          predicates:
            - Method=GET
          filters:
            - PrefixPath=/user


  #        - id: retry
  #          uri: http://127.0.0.1:8882
  #          predicates:
  #            - Method=GET
  #          filters:
  #            - name: Retry
  #              args:
  #                retries: 2
  #                #返回哪个状态码需要进行重试，返回状态码为5XX进行重试
  #                statuses: BAD_GATEWAY
  #                backoff:
  #                  firstBackoff: 10ms
  #                  maxBackoff: 50ms
  #                  factor: 2
  #                  basedOnPreviousValue: false
  #          - id: requestLimiter
  #            uri: http://127.0.0.1:8882
  #            filters:
  #            - name: RequestRateLimiter
  #              args:
  #                # 每秒允许处理的请求量
  #                redis-rate-limiter.replenishRate: 1
  #                # 每秒最大处理的请求数量
  #                redis-rate-limiter.burstCapacity: 2
  #                # 限流策略，对应的是bean名称
  #                key-resolver: "#{@ipResolver}"
  #            predicates:
  #              - Method=GET
  #        - id: hytrix
  #          uri: http://127.0.0.1:8089
  #          predicates:
  #            - Path=/**
  #          filters:
  #            - name: Hystrix
  #              args:
  #                name: fallbackcmd
  #                fallbackUri: forward:/fallback
  #        - id: pre_fix
  #          uri: http://127.0.0.1:8882
  #          predicates:
  #            - Path=/**
  #            - Method=GET
  #          filters:
  #            - PrefixPath=/user
  redis:
    host: localhost
    port: 6379

#        - id: strip_prefix
#          uri: http://127.0.0.1:8089
#          predicates:
#            - Path=/user-service1/**
#          filters:
#            - StripPrefix=2
#      - id: add_parameter
#        uri: http://127.0.0.1:8089
#        filters:
#          # 添加请求参数
#          - AddRequestParameter=username,macro
#        predicates:
#          - Method=GET
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8080/eureka
logging:
  level:
    org.springframework.cloud.gateway: debug